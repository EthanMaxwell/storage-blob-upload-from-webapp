@{
    ViewData["Title"] = "Home Page";
}

<!-- Client side libs required  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css"
    crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/css/blueimp-gallery.min.css"
    crossorigin="anonymous">

<style>
    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    main {
        margin: 20px;
    }

    #gallery-note {
        font-size: smaller
    }

    .blueimp-gallery {
        width: 100%;
        height: 100%;
    }

    .dropzone {
        border: 3px dashed #00a1f1;
        background: #F0F8FF;
        margin: 25px;
        border-radius: 5px;
        max-width: 400px;
    }

    .dropzone .dz-message {
        font-weight: 350;
    }

    .dropzone .dz-message .note {
        font-family: sans-serif;
        font-size: 18px;
        font-weight: 200;
        display: block;
        margin-top 1.5rem;
    }

    .image-grid {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
    }

    .image-grid img {
        width: 200px;
        height: 200px;
        margin: 10px;
        object-fit: cover;
        cursor: pointer;
    }
</style>


<main>
    <div class="box header">
        <h1><span class="fa fa-user-circle-o"></span> <span id="page-title">ImageUploader</span></h1>
    </div>

    <div class="box content">
        <hr>
        <h2>Image Uploader</h2>
        <div>
            <form action="/api/images/upload" class="dropzone needsclick dz-clickable" id="image-upload" method="post"
                enctype="multipart/form">

                <div class="dz-message needsclick">
                    <span class="note needsclick">
                        Drop files here or click to upload!
                    </span>
                </div>
            </form>
        </div>
        <div id="stored-images"></div>
        <div class="image-grid" id="imageContainer"></div>
    </div>
    </div>
</main>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

<script>
    // fetchImageLinks function remains the same

    // Append images to imageContainer in a grid format
    function appendImages(images) {
        var container = document.getElementById('imageContainer');
        container.innerHTML = '';

        for (var i = 0, j = images.length; i < j; i++) {
            var a = document.createElement('a');
            a.href = images[i];
            a.target = "_blank";
            var img = document.createElement('img');
            img.src = images[i];
            a.appendChild(img);
            container.appendChild(a);
        }
    }

    // On fetchImageLinks success, display images in grid format
    function fetchImageLinks() {
        $.get("api/Images/thumbnails", function (fetchedImageLinks) {
            console.log(fetchedImageLinks)

            if (_.isEmpty(fetchedImageLinks)) {
                console.log('empty fetched');
            } else {
                var imageLinksEqual = _.isEqual(_.sortBy(gallery.list.map(s => s.split("?")[0])), _.sortBy(fetchedImageLinks.map(s => s.split("?")[0])))
                if (imageLinksEqual) {
                    console.log('images arr are equal')
                    // do nothing
                } else {
                    console.log('images arr are not equal')
                    // update gallery with new image urls. Only compare actual url without SAS token query string
                    var newImageLinks = _.difference(fetchedImageLinks.map(s => s.split("?")[0]), gallery.list.map(s => s.split("?")[0]))
                    appendImages(newImageLinks);
                }
            });
    }

    // init gallery for later use
    var gallery;

    // Fetch images on page load
    fetchImageLinks();

    /* Dropzone */
    // "imageUpload" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function () {
            myDropzone = this;
            myDropzone.on("success", function (file, response) {
                console.log("Success");
                myDropzone.removeFile(file);
                fetchImageLinks();
            });
        }
    };
</script>
